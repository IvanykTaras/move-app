[{"/home/ulkioratar/Desktop/move-app/src/reportWebVitals.js":"1","/home/ulkioratar/Desktop/move-app/src/App.js":"2","/home/ulkioratar/Desktop/move-app/src/components/Moves.js":"3","/home/ulkioratar/Desktop/move-app/src/components/Move.js":"4","/home/ulkioratar/Desktop/move-app/src/index.js":"5","/home/ulkioratar/Desktop/move-app/src/components/AboutMove.js":"6"},{"size":362,"mtime":1609882608399,"results":"7","hashOfConfig":"8"},{"size":1763,"mtime":1609907130017,"results":"9","hashOfConfig":"8"},{"size":1802,"mtime":1609907126305,"results":"10","hashOfConfig":"8"},{"size":658,"mtime":1609905581090,"results":"11","hashOfConfig":"8"},{"size":219,"mtime":1609906183927,"results":"12","hashOfConfig":"8"},{"size":746,"mtime":1609906961397,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i712ea",{"filePath":"16","messages":"17","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ulkioratar/Desktop/move-app/src/reportWebVitals.js",[],"/home/ulkioratar/Desktop/move-app/src/App.js",["28"],"/home/ulkioratar/Desktop/move-app/src/components/Moves.js",["29","30"],"import React, { useState, useEffect } from \"react\";\nimport \"../Main.css\";\n\n// //React router\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n//Components\nimport Move from \"./Move\";\n\nexport default function Moves({ url }) {\n  const [move, setMove] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadText, setLoadText] = useState(\"Loading\");\n  const [countDots, setCountDots] = useState(0);\n\n  const fetchMove = async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(url);\n      const moves = await response.json();\n\n      setLoading(false);\n      setMove(moves);\n    } catch (err) {\n      setLoading(false);\n      console.log(err + \"HERE ________________________________\");\n    }\n    console.log(move);\n  };\n\n  const loadEffect = () => {\n    if (countDots === 0) {\n      setCountDots(1);\n      setLoadText(\"Loading.\");\n    } else if (countDots === 1) {\n      setCountDots(2);\n      setLoadText(\"Loading..\");\n    } else if (countDots === 2) {\n      setCountDots(3);\n      setLoadText(\"Loading...\");\n    } else {\n      setCountDots(0);\n      setLoadText(\"Loading\");\n    }\n  };\n\n  useEffect(() => {\n    fetchMove();\n  }, [url]);\n\n  useEffect(() => {\n    const interval = setInterval(loadEffect, 100);\n    return () => clearInterval(interval);\n  }, [loadText]);\n\n  if (loading) {\n    return (\n      <div>\n        <h1 className=\"loading\">{loadText}</h1>\n      </div>\n    );\n  }\n\n  if (move.errors) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"Container\">\n      \n        <div className=\"move-blocks\">\n          {move.results\n            ? move.results.map((move, index) => {\n                return <Move key={index} move={move} />;\n              })\n            : \"\"}\n        </div>\n      \n    </div>\n  );\n}\n","/home/ulkioratar/Desktop/move-app/src/components/Move.js",["31","32","33"],"/home/ulkioratar/Desktop/move-app/src/index.js",[],["34","35"],"/home/ulkioratar/Desktop/move-app/src/components/AboutMove.js",["36"],{"ruleId":null,"fatal":true,"severity":2,"message":"37","line":55,"column":7},{"ruleId":"38","severity":1,"message":"39","line":50,"column":6,"nodeType":"40","endLine":50,"endColumn":11,"suggestions":"41"},{"ruleId":"38","severity":1,"message":"42","line":55,"column":6,"nodeType":"40","endLine":55,"endColumn":16,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":6,"column":27,"nodeType":"46","messageId":"47","endLine":6,"endColumn":33},{"ruleId":"44","severity":1,"message":"48","line":6,"column":35,"nodeType":"46","messageId":"47","endLine":6,"endColumn":41},{"ruleId":"44","severity":1,"message":"49","line":6,"column":43,"nodeType":"46","messageId":"47","endLine":6,"endColumn":48},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"38","severity":1,"message":"42","line":27,"column":6,"nodeType":"40","endLine":27,"endColumn":16,"suggestions":"54"},"Parsing error: Expected corresponding JSX closing tag for <>\n\n\u001b[0m \u001b[90m 53 | \u001b[39m          {\u001b[90m/* </Route>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 54 | \u001b[39m\u001b[90m        </Switch> */\u001b[39m}\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 | \u001b[39m      \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mRouter\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 56 | \u001b[39m    \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 57 | \u001b[39m  )\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 58 | \u001b[39m}\u001b[0m","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMove'. Either include it or remove the dependency array.","ArrayExpression",["55"],"React Hook useEffect has a missing dependency: 'loadEffect'. Either include it or remove the dependency array.",["56"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","no-native-reassign",["57"],"no-negated-in-lhs",["58"],["59"],{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"64"},"Update the dependencies array to be: [fetchMove, url]",{"range":"65","text":"66"},"Update the dependencies array to be: [loadEffect, loadText]",{"range":"67","text":"68"},{"range":"69","text":"68"},[1208,1213],"[fetchMove, url]",[1335,1345],"[loadEffect, loadText]",[703,713]]